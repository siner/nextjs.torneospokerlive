#!/bin/bash

# Script helper para crear nuevas migraciones
# Uso: ./supabase/create-migration.sh nombre_de_la_migracion

if [ -z "$1" ]; then
    echo "❌ Error: Debes proporcionar un nombre para la migración"
    echo "Uso: ./supabase/create-migration.sh nombre_de_la_migracion"
    echo ""
    echo "Ejemplo:"
    echo "  ./supabase/create-migration.sh add_user_preferences"
    exit 1
fi

# Generar timestamp
TIMESTAMP=$(date +"%Y%m%d%H%M%S")
MIGRATION_NAME=$1
FILENAME="supabase/migrations/${TIMESTAMP}_${MIGRATION_NAME}.sql"

# Crear archivo con template
cat > "$FILENAME" << EOF
-- Migration: ${MIGRATION_NAME//_/ }
-- Description: [Describe aquí qué hace esta migración]
-- Date: $(date +"%Y-%m-%d")
-- Author: [Tu nombre]

-- TODO: Añade tu SQL aquí

-- Ejemplo de tabla:
-- CREATE TABLE IF NOT EXISTS public.nombre_tabla (
--     id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--     created_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL
-- );

-- Ejemplo de índice:
-- CREATE INDEX IF NOT EXISTS idx_nombre_tabla_campo ON public.nombre_tabla(campo);

-- Ejemplo de RLS:
-- ALTER TABLE public.nombre_tabla ENABLE ROW LEVEL SECURITY;
-- CREATE POLICY "policy_name" ON public.nombre_tabla FOR SELECT TO authenticated USING (true);

-- Ejemplo de permisos:
-- GRANT SELECT, INSERT, UPDATE, DELETE ON public.nombre_tabla TO authenticated;

EOF

echo "✅ Migración creada: $FILENAME"
echo ""
echo "Próximos pasos:"
echo "1. Edita el archivo y añade tu SQL"
echo "2. Prueba la migración en desarrollo"
echo "3. Ejecuta en Supabase Dashboard o con CLI"
echo ""
echo "Abrir archivo: code $FILENAME"

